/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.MySQLManager;

import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Autor;
import modelo.Categoria;
import modelo.Editorial;
import modelo.CategoriaLibroEnlace;
import modelo.Idioma;
import modelo.IdiomaLibroEnlace;
import modelo.Libro;
import modelo.LibroAutorEnlace;

/**
 *
 * @author Gn3p
 */
public class prueba extends javax.swing.JFrame {

    /**
     * Creates new form prueba
     */
    /**
     * Se definen los ArrayLists
     *
     */
    ArrayList<Autor> listaAutorLibro = new ArrayList<>();
    ArrayList<Editorial> listaEditorialLibro = new ArrayList<>();
    ArrayList<Categoria> listaCategoriaLibro = new ArrayList<>();
    ArrayList<Idioma> listaIdiomaLibro = new ArrayList<>();
    ArrayList<Libro> listaLibro = new ArrayList<>();
    ArrayList<Libro> listaLibroFactura = new ArrayList<>();
    ArrayList<LibroAutorEnlace> listaAutorLibroEnlace = new ArrayList<>();
    ArrayList<IdiomaLibroEnlace> listaIdiomaLibroEnlace = new ArrayList<>();
    ArrayList<CategoriaLibroEnlace> listaCategoriaLibroEnlace = new ArrayList<>();

    public prueba() {
        initComponents();
        mostrarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        facturaTBL = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        agregarNuevoAutorBTN = new javax.swing.JButton();
        agregarCategoriaBTN = new javax.swing.JButton();
        categoriasLBL = new javax.swing.JLabel();
        agregarNuevaEditorialBTN = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tituloTXT = new javax.swing.JTextField();
        isbnTXT = new javax.swing.JTextField();
        numeroSerieTXT = new javax.swing.JTextField();
        numeroDePaginasTXT = new javax.swing.JTextField();
        precioReferencialTXT = new javax.swing.JTextField();
        eliminarLibroBTN = new javax.swing.JButton();
        editarLibroBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        distribuidoresBTN = new javax.swing.JButton();
        nombreAutorLBL = new javax.swing.JLabel();
        idiomasLBL = new javax.swing.JLabel();
        agregarIdiomaBTN = new javax.swing.JButton();
        editorialLBL = new javax.swing.JLabel();
        categoriaALibroTXT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        agregarEditorialALibroBTN = new javax.swing.JButton();
        idAutorTXT = new javax.swing.JTextField();
        agregarAutorALibroBTN = new javax.swing.JButton();
        agregarCategoriaALibroBTN = new javax.swing.JButton();
        idEditorialTXT = new javax.swing.JTextField();
        idiomaLibroTXT = new javax.swing.JTextField();
        agregarIdiomaALibroBTN = new javax.swing.JButton();
        verFactura = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        anhoPublicacionTXT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        facturaTBL1 = new javax.swing.JTable();
        AgregarAFactura = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        metodoPagoTXT = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        facturaTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id de libro", "Editorial", "Autor", "Categoría/as", "Idioma", "Título", "ISBN", "Número de serie", "Número de página", "Precio referencial"
            }
        ));
        jScrollPane1.setViewportView(facturaTBL);

        jLabel2.setText("Agregar Autor por id");

        jLabel3.setText("Agregar Categoria por ID");

        jLabel4.setText("Agregar Idioma por ID");

        agregarNuevoAutorBTN.setText("Agregar nuevo autor");
        agregarNuevoAutorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevoAutorBTNActionPerformed(evt);
            }
        });

        agregarCategoriaBTN.setText("Agregar categoría");
        agregarCategoriaBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCategoriaBTNActionPerformed(evt);
            }
        });

        categoriasLBL.setText("Categorias Agregadas");

        agregarNuevaEditorialBTN.setText("Agregar nueva editorial");
        agregarNuevaEditorialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevaEditorialBTNActionPerformed(evt);
            }
        });

        jLabel5.setText("Título");

        jLabel6.setText("ISBN");

        jLabel8.setText("Número de serie");

        jLabel9.setText("Número de páginas");

        jLabel10.setText("Precio referencial");

        eliminarLibroBTN.setText("Eliminar libro");

        editarLibroBTN.setText("Editar libro");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Generador de Solicitudes de libros a distribuidores ");

        distribuidoresBTN.setText("Menú de distribuidores");
        distribuidoresBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distribuidoresBTNActionPerformed(evt);
            }
        });

        nombreAutorLBL.setText("Nombre Autores");

        idiomasLBL.setText("Idiomas Agregados");

        agregarIdiomaBTN.setText("Agregar idioma");
        agregarIdiomaBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarIdiomaBTNActionPerformed(evt);
            }
        });

        editorialLBL.setText("Nombre Editorial");

        jLabel12.setText("Agregar editorial por id");

        agregarEditorialALibroBTN.setText("Agregar Editorial");
        agregarEditorialALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarEditorialALibroBTNActionPerformed(evt);
            }
        });

        agregarAutorALibroBTN.setText("Agregar Autores");
        agregarAutorALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAutorALibroBTNActionPerformed(evt);
            }
        });

        agregarCategoriaALibroBTN.setText("Agregar Categorias");
        agregarCategoriaALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCategoriaALibroBTNActionPerformed(evt);
            }
        });

        idiomaLibroTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idiomaLibroTXTActionPerformed(evt);
            }
        });

        agregarIdiomaALibroBTN.setText("Agregar Idiomas");
        agregarIdiomaALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarIdiomaALibroBTNActionPerformed(evt);
            }
        });

        verFactura.setText("Ver Facturas");

        jLabel1.setText("Anho publicacion");

        facturaTBL1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre de libro", "Autor", "Valor sin IVA", "Valor con IVA", "Distribuidora"
            }
        ));
        jScrollPane2.setViewportView(facturaTBL1);

        AgregarAFactura.setText("Agregar libro A factura");
        AgregarAFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarAFacturaActionPerformed(evt);
            }
        });

        jLabel13.setText("Folio:");

        metodoPagoTXT.setText("Proceder a pago");
        metodoPagoTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoPagoTXTActionPerformed(evt);
            }
        });

        jButton1.setText("Ver editorial");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver Autores");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("VerCategorias");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ver idiomas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(agregarNuevaEditorialBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarNuevoAutorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarCategoriaBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarIdiomaBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(distribuidoresBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(verFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(idiomaLibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(163, 163, 163))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(editorialLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(idAutorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(100, 100, 100)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(isbnTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tituloTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(numeroSerieTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(numeroDePaginasTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(anhoPublicacionTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(precioReferencialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel8)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(editarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(eliminarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(132, 132, 132)
                                                .addComponent(nombreAutorLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(agregarIdiomaALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel12)
                                                            .addComponent(jLabel2)
                                                            .addComponent(jLabel3))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(84, 84, 84)
                                                                .addComponent(agregarAutorALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(categoriaALibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(agregarCategoriaALibroBTN))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(idEditorialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(agregarEditorialALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(132, 132, 132)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(idiomasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(categoriasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(133, 133, 133)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(AgregarAFactura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(metodoPagoTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarNuevaEditorialBTN)
                    .addComponent(agregarNuevoAutorBTN)
                    .addComponent(agregarCategoriaBTN)
                    .addComponent(agregarIdiomaBTN)
                    .addComponent(distribuidoresBTN)
                    .addComponent(verFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(idEditorialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarEditorialALibroBTN)
                            .addComponent(jButton1))
                        .addGap(2, 2, 2)
                        .addComponent(editorialLBL)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idAutorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarAutorALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombreAutorLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(categoriaALibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarCategoriaALibroBTN)
                            .addComponent(jButton3))
                        .addGap(1, 1, 1)
                        .addComponent(categoriasLBL)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idiomaLibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(agregarIdiomaALibroBTN)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idiomasLBL)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tituloTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(isbnTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(numeroSerieTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(numeroDePaginasTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(precioReferencialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(anhoPublicacionTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(AgregarAFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(metodoPagoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void agregarAutorALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAutorALibroBTNActionPerformed
        // TODO add your handling code here:
        Autor a = new Autor();
        String stringvacio = "";
        int id_autor;
        id_autor = Integer.parseInt(idAutorTXT.getText());
        String query = "SELECT `id_autor`, `nombre`, `apellido_pat`, `apellido_mat` FROM `autor` WHERE `id_autor`=" + id_autor;
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a = manager.executeQueryConsultaAutor(query);
        listaAutorLibro.add(a);
        nombreAutorLBL.setText(stringvacio);
        for (int i = 0; i < listaAutorLibro.size(); i++) {
            nombreAutorLBL.setText(nombreAutorLBL.getText() + " " + listaAutorLibro.get(i).getNombre() + " " + listaAutorLibro.get(i).getAp_pat());
        }

    }//GEN-LAST:event_agregarAutorALibroBTNActionPerformed

    private void agregarCategoriaALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCategoriaALibroBTNActionPerformed
        // TODO add your handling code here:
        //Nuevo comentario Xd
        Categoria a = new Categoria();
        String stringvacio = "";
        int id_categoria;
        id_categoria = Integer.parseInt(categoriaALibroTXT.getText());
        String query = "SELECT `id_cat`, `nom_cat` FROM `categorias` WHERE `id_cat`=" + id_categoria;
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a = manager.executeQueryConsultaCategoria(query);
        listaCategoriaLibro.add(a);
        categoriasLBL.setText(stringvacio);
        for (int i = 0; i < listaAutorLibro.size(); i++) {
            categoriasLBL.setText(categoriasLBL.getText() + " " + listaCategoriaLibro.get(i).getNom_cat() + " ");
        }


    }//GEN-LAST:event_agregarCategoriaALibroBTNActionPerformed

    private void agregarNuevaEditorialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevaEditorialBTNActionPerformed
        // TODO add your handling code here:
        new vistaEditorial().setVisible(true);
    }//GEN-LAST:event_agregarNuevaEditorialBTNActionPerformed

    private void agregarNuevoAutorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevoAutorBTNActionPerformed
        // TODO add your handling code here:
        new vistaAutor().setVisible(true);
    }//GEN-LAST:event_agregarNuevoAutorBTNActionPerformed

    private void agregarCategoriaBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCategoriaBTNActionPerformed
        // TODO add your handling code here:
        new vistaCategorias().setVisible(true);


    }//GEN-LAST:event_agregarCategoriaBTNActionPerformed

    private void agregarIdiomaBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarIdiomaBTNActionPerformed
        // TODO add your handling code here:
        new vistaIdiomas().setVisible(true);
    }//GEN-LAST:event_agregarIdiomaBTNActionPerformed

    private void distribuidoresBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distribuidoresBTNActionPerformed
        // TODO add your handling code here:
        new vistaDistribuidor().setVisible(true);
    }//GEN-LAST:event_distribuidoresBTNActionPerformed

    private void agregarEditorialALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarEditorialALibroBTNActionPerformed
        // TODO add your handling code here:
        Editorial a = new Editorial();
        String stringvacio = "";
        int id_editorial;
        id_editorial = Integer.parseInt(idEditorialTXT.getText());
        String query = "SELECT `id_editorial`, `nom_editorial` FROM `editorial` WHERE `id_editorial`=" + id_editorial;
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a = manager.executeQueryConsultaEditorial(query);
        listaEditorialLibro.add(a);
        editorialLBL.setText(stringvacio);
        System.out.println(a.toString());
        for (int i = 0; i < listaEditorialLibro.size(); i++) {
            System.out.println(listaEditorialLibro.get(i).getNom_editorial());
            editorialLBL.setText(listaEditorialLibro.get(i).getNom_editorial());
        }


    }//GEN-LAST:event_agregarEditorialALibroBTNActionPerformed

    private void agregarIdiomaALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarIdiomaALibroBTNActionPerformed
        // TODO add your handling code here:
        Idioma a = new Idioma();
        String stringvacio = "";
        int id_idioma;
        id_idioma = Integer.parseInt(idiomaLibroTXT.getText());
        String query = "SELECT `id_idioma`, `nom_idioma` FROM `idiomas` WHERE `id_idioma`=" + id_idioma;
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a = manager.executeQueryConsultaIdioma(query);
        listaIdiomaLibro.add(a);
        idiomasLBL.setText(stringvacio);
        System.out.println(a.toString());
        for (int i = 0; i < listaIdiomaLibro.size(); i++) {

            idiomasLBL.setText(listaIdiomaLibro.get(i).getNom_idioma());
        }

    }//GEN-LAST:event_agregarIdiomaALibroBTNActionPerformed

    private void idiomaLibroTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idiomaLibroTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idiomaLibroTXTActionPerformed

    private void AgregarAFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarAFacturaActionPerformed
        // TODO add your handling code here:

        limpiarTabla();
        Libro l = new Libro();

        for (int i = 0; i < listaEditorialLibro.size(); i++) {
            l.setId_editorial(listaEditorialLibro.get(i).getId_editorial());
        }

        int num_serie = Integer.parseInt(numeroSerieTXT.getText());
        int num_pag = Integer.parseInt(numeroDePaginasTXT.getText());
        String isbn = isbnTXT.getText();
        String titulo = tituloTXT.getText();
        int precio_ref = Integer.parseInt(precioReferencialTXT.getText());
        int anho_publ = Integer.parseInt(anhoPublicacionTXT.getText());
        int estado = 1;

        l.setNum_pag(num_pag);
        l.setAnho_publ(anho_publ);
        l.setTitulo(titulo);
        l.setNum_serie(num_serie);
        l.setIsbn(isbn);
        l.setPrecio_ref(precio_ref);
        l.setEstado(estado);

        l.agregarLibro(l.getId_editorial(), num_serie, num_pag, isbn, titulo, precio_ref, anho_publ, estado);

        listaLibroFactura.add(l);

        mostrarTablaFactura();


    }//GEN-LAST:event_AgregarAFacturaActionPerformed

    public void mostrarTablaFactura() {
        //Limpiamos las listas que contienen todas los datos
        listaAutorLibro.removeAll(listaAutorLibro);
        listaEditorialLibro.removeAll(listaEditorialLibro);
        listaCategoriaLibro.removeAll(listaCategoriaLibro);
        listaIdiomaLibro.removeAll(listaIdiomaLibro);
        listaLibro.removeAll(listaLibro);
        listaLibroFactura.removeAll(listaLibroFactura);
        //Se llenan las listas
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaAutores(listaAutorLibro);
        manager.executeQueryConsultaLLenaTablaCategoria(listaCategoriaLibro);
        manager.executeQueryConsultaLLenaTablaEditoriales(listaEditorialLibro);
        manager.executeQueryConsultaLLenaTablaIdioma(listaIdiomaLibro);
        manager.executeQueryConsultaLLenaTablaLibro(listaLibro);
        manager.executeQueryConsultaLLenaListaCategoriaLibroEnlace(listaCategoriaLibroEnlace);
        manager.executeQueryConsultaLLenaListaIdiomaLibroEnlace(listaIdiomaLibroEnlace);
        manager.executeQueryConsultaLLenaListaLibroAutorEnlace(listaAutorLibroEnlace);
        //Se define la matriz que contiene la informacion
        String matriz[][] = new String[listaLibroFactura.size()][5];
        //Se definen las variables auxiliares que contendrán la Editorial, Autor, Categoria e Idioma 
        String editorial = "";
        String autor = "";
        String categoria = "";
        String idioma = "";
        //Se definen las columnas de la tabla
        String[] columnas = {
            "Id Libro", "Editorial", "Autor", "Categoria", "Idioma", "Titulo", "ISBN", "Numero de serie", "Num. de Paginas", "Precio Referencial"
        };
        for (int i = 0; i < listaLibroFactura.size(); i++) {

            String precio_ref = Integer.toString(listaLibroFactura.get(i).getPrecio_ref());
            String precio_iva = precio_ref + Double.toString(listaLibroFactura.get(i).getPrecio_ref() * 0.19);

            matriz[i][0] = listaLibroFactura.get(i).getTitulo();
            matriz[i][1] = listaAutorLibro.get(i).getNombre() + " " + listaAutorLibro.get(i).getAp_pat();
            matriz[i][2] = precio_ref;
            matriz[i][3] = precio_iva;
            matriz[i][4] = listaEditorialLibro.get(i).getNom_editorial();

        }
        facturaTBL1.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "Titulo", "Autor", "Valor Sin IVA", "Valor con IVA", "Distribuidira"
                }
        ));

        //Creamos el Tablemodel
    }
    private void metodoPagoTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoPagoTXTActionPerformed
        int seleccion = JOptionPane.showOptionDialog(null, "Seleccione una opcion",
                "Selector de opciones", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null,// null para icono por defecto.
                new Object[]{"Efectivo", "Débito", "Crédito",}, "opcion 1");

        if (seleccion == 0) {

            JOptionPane.showMessageDialog(null, "Ha pagado con efectivo, muchas gracias.");

        } else if (seleccion == 1) {
            JOptionPane.showMessageDialog(null, "Ha pagado con tarjeta de débito, muchas gracias.");
        } else {
            JOptionPane.showMessageDialog(null, "Ha pagado con tarjeta de crédito, muchas gracias.");
        }

        for (int i = 0; i < listaLibroFactura.size(); i++) {

            MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
            listaLibroFactura = manager.executeQueryConsultaLLenaTablaLibro(listaLibroFactura);

            int id_libro = 0;
            for (int a = 0; a < listaLibroFactura.size(); a++) {
                id_libro = listaLibroFactura.get(a).getId_libro();
            }
            LibroAutorEnlace en = new LibroAutorEnlace();
            CategoriaLibroEnlace encl = new CategoriaLibroEnlace();
            IdiomaLibroEnlace auid = new IdiomaLibroEnlace();

            for (int b = 0; b < listaAutorLibro.size(); b++) {
                en.agregaRelacion(id_libro, listaAutorLibro.get(b).getId_autor());

            }
            for (int c = 0; c < listaCategoriaLibro.size(); c++) {
                encl.agregaRelacion(id_libro,
                        listaCategoriaLibro.get(c).getId_cat());
            }
            for (int d = 0; d < listaCategoriaLibro.size(); d++) {
                auid.agregaRelacion(id_libro,
                        listaIdiomaLibro.get(d).getId_idioma());
            }

        }
    }//GEN-LAST:event_metodoPagoTXTActionPerformed

    private void idEditorialTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idEditorialTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idEditorialTXTKeyTyped

    private void idAutorTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idAutorTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idAutorTXTKeyTyped

    private void categoriaALibroTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoriaALibroTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_categoriaALibroTXTKeyTyped

    private void idiomaLibroTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idiomaLibroTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idiomaLibroTXTKeyTyped

    private void tituloTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloTXTKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c > ' ') && (c < 'á' || c > 'ú') && (c < 'Á' || c > 'Ú')) {
            evt.consume();
        }
    }//GEN-LAST:event_tituloTXTKeyTyped

    private void isbnTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_isbnTXTKeyTyped

    private void numeroSerieTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroSerieTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_numeroSerieTXTKeyTyped

    private void numeroDePaginasTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDePaginasTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_numeroDePaginasTXTKeyTyped

    private void precioReferencialTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioReferencialTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_precioReferencialTXTKeyTyped

    private void anhoPublicacionTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anhoPublicacionTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_anhoPublicacionTXTKeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    public void mostrarTabla() {
        //Limpiamos las listas que contienen todas los datos
        listaAutorLibro.removeAll(listaAutorLibro);
        listaEditorialLibro.removeAll(listaEditorialLibro);
        listaCategoriaLibro.removeAll(listaCategoriaLibro);
        listaIdiomaLibro.removeAll(listaIdiomaLibro);
        listaLibro.removeAll(listaLibro);
        listaLibroFactura.removeAll(listaLibroFactura);
        listaCategoriaLibroEnlace.removeAll(listaCategoriaLibroEnlace);
        listaAutorLibroEnlace.removeAll(listaAutorLibroEnlace);
        listaIdiomaLibroEnlace.removeAll(listaIdiomaLibroEnlace);
        //Se llenan las listas
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaAutores(listaAutorLibro);
        manager.executeQueryConsultaLLenaTablaCategoria(listaCategoriaLibro);
        manager.executeQueryConsultaLLenaTablaEditoriales(listaEditorialLibro);
        manager.executeQueryConsultaLLenaTablaIdioma(listaIdiomaLibro);
        manager.executeQueryConsultaLLenaTablaLibro(listaLibro);
        manager.executeQueryConsultaLLenaListaCategoriaLibroEnlace(listaCategoriaLibroEnlace);
        manager.executeQueryConsultaLLenaListaIdiomaLibroEnlace(listaIdiomaLibroEnlace);
        manager.executeQueryConsultaLLenaListaLibroAutorEnlace(listaAutorLibroEnlace);
        //Se define la matriz que contiene la informacion
        String matriz[][] = new String[listaLibroFactura.size()][10];
         //Se definen las columnas de la tabla
        String[] columnas = {"Id Libro", "Editorial", "Autor", "Categoria", "Idioma", "Titulo", "ISBN", "Numero de serie", "Num. de Paginas", "Precio Referencial"};
        //Este iterador llena la matriz que contiene los datos

        for (int i = 0; i < listaLibro.size(); i++) {
            //Se definen las variables auxiliares que contendrán la Editorial, Autor, Categoria e Idioma 
            String editorial = "";
            String autor = "";
            String categoria = "";
            String idioma = "";
           //Se definen variables auxiliares
            int idlibroaux;
            int idedaux;
            idlibroaux = listaLibro.get(i).getId_libro();
            idedaux= listaLibro.get(i).getId_editorial();
            //Se muestra por pantalla la vuelta el id actual y el id de editorial
            System.out.println("Vuelta: "+i);
            System.out.println("Id del cliente actual : "+idlibroaux);
            System.out.println("Id de editorial de libro:"+idedaux);
            String idlibro = Integer.toString(listaLibro.get(i).getId_libro());
            String num_serie = Integer.toString(listaLibro.get(i).getNum_serie());
            String num_pag = Integer.toString(listaLibro.get(i).getNum_pag());
            String precio_ref = Integer.toString(listaLibro.get(i).getPrecio_ref());
            matriz[i][0] = idlibro;
            for (int k = 0; k < listaEditorialLibro.size(); k++) {
                System.out.println("Editoriales -> id editorial de libro a comparar:" +listaEditorialLibro.get(k).getId_editorial()+" id actual:"+idedaux);
                if (idedaux == listaEditorialLibro.get(k).getId_editorial()){
                    editorial= editorial.concat(listaEditorialLibro.get(k).getNom_editorial());
                
                }           
                
            }
            matriz[i][1] = editorial;
            for (int j = 0; j < listaAutorLibro.size(); j++) {
                System.out.println("Autores -> id libro a comparar:" +listaAutorLibro.get(j).getId_autor()+" id actual:"+idlibroaux);
                if (idlibroaux == listaAutorLibro.get(j).getId_autor()) {
                    autor = autor.concat(listaAutorLibro.get(j).getNombre() + " " + listaAutorLibro.get(j).getAp_pat());
                }
            }
            matriz[i][2] = autor;
            for (int l = 0; l < listaCategoriaLibro.size(); l++) {
               System.out.println("Categoria -> id categoria libro a comparar:" +listaCategoriaLibro.get(l).getId_cat()+" id actual:"+idlibroaux);
                if (idlibroaux == listaCategoriaLibro.get(l).getId_cat()) {
                    categoria = categoria.concat(listaCategoriaLibro.get(l).getNom_cat());
                    
                }
                
            }
            matriz[i][3] = categoria;
            for (int m = 0; m < listaIdiomaLibro.size(); m++) {
                System.out.println("Idioma -> id libro a comparar: "+idlibroaux+", id del idioma a comparar : "+listaIdiomaLibroEnlace.get(m).getId_libro());
                if (idlibroaux==listaIdiomaLibroEnlace.get(m).getId_libro()) {
                    //Debo de concatenar el nombre a idioma String, pero primero debo de tener el id que lo sacaré de id libro
                    //
                    idioma = idioma.concat(listaIdiomaLibro.get(idlibroaux).getNom_idioma());
                    
                }
            }
            matriz[i][4] = idioma;
            matriz[i][5] = listaLibroFactura.get(i).getTitulo();
            matriz[i][6] = listaLibroFactura.get(i).getIsbn();
            matriz[i][7] = num_serie;
            matriz[i][8] = num_pag;
            matriz[i][9] = precio_ref;

        }
        DefaultTableModel dtm = new DefaultTableModel(matriz, columnas);
        facturaTBL.setModel(dtm);

    }

    public void limpiarTabla() {
        for (int i = 0; i < listaLibro.size(); i++) {
            listaLibro.remove(i);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarAFactura;
    private javax.swing.JButton agregarAutorALibroBTN;
    private javax.swing.JButton agregarCategoriaALibroBTN;
    private javax.swing.JButton agregarCategoriaBTN;
    private javax.swing.JButton agregarEditorialALibroBTN;
    private javax.swing.JButton agregarIdiomaALibroBTN;
    private javax.swing.JButton agregarIdiomaBTN;
    private javax.swing.JButton agregarNuevaEditorialBTN;
    private javax.swing.JButton agregarNuevoAutorBTN;
    private javax.swing.JTextField anhoPublicacionTXT;
    private javax.swing.JTextField categoriaALibroTXT;
    private javax.swing.JLabel categoriasLBL;
    private javax.swing.JButton distribuidoresBTN;
    private javax.swing.JButton editarLibroBTN;
    private javax.swing.JLabel editorialLBL;
    private javax.swing.JButton eliminarLibroBTN;
    public javax.swing.JTable facturaTBL;
    private javax.swing.JTable facturaTBL1;
    private javax.swing.JTextField idAutorTXT;
    private javax.swing.JTextField idEditorialTXT;
    private javax.swing.JTextField idiomaLibroTXT;
    private javax.swing.JLabel idiomasLBL;
    private javax.swing.JTextField isbnTXT;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton metodoPagoTXT;
    private javax.swing.JLabel nombreAutorLBL;
    private javax.swing.JTextField numeroDePaginasTXT;
    private javax.swing.JTextField numeroSerieTXT;
    private javax.swing.JTextField precioReferencialTXT;
    private javax.swing.JTextField tituloTXT;
    private javax.swing.JButton verFactura;
    // End of variables declaration//GEN-END:variables
}
